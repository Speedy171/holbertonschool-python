add_integer module
------------------

Importing "add_integer"
-----------------------

Import our .py file
>>> add_integer = __import__('0-add_integer').add_integer

Testing for two int numbers
>>> add_integer(1, 2)
3

Testing one argument
>>> add_integer(1)
99

Testing string as second argument
>>> add_integer(1, "2")
Traceback (most recent call last):
TypeError: b must be an integer

Testing list as first argument
>>> add_integer([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: a must be an integer

Testing for two floats
>>> add_integer(1.2, 2.3)
3

Testing for two negative floats
>>> add_integer(-4, -5)
-9

Testing for adding float numbers and integer
>>> add_integer(-9.1, 5.9)
-4

Testing for adding zero and integer
>>> add_integer(0, 424.2)
424

Testing for float infinity
>>> add_integer(float("inf"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Holberton\TDD\0-add_integer.py", line 23, in add_integer
    b = int(b)
OverflowError: cannot convert float infinity to integer

Testing for NaN
>>> add_integer(float("nan"))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

Test None
>>> add_integer(None) 
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Holberton\TDD\0-add_integer.py", line 13, in add_integer
    raise TypeError('a must be an integer')
TypeError: a must be an integer

Test Bool
>>> add_integer(2,False)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Holberton\TDD\0-add_integer.py", line 15, in add_integer
    raise TypeError('b must be an integer')
TypeError: b must be an integer